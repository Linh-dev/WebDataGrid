<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BasicDescription" xml:space="preserve">
    <value>This sample demonstrates how to use a WebMonthCalendar.</value>
  </data>
  <data name="BasicTitle" xml:space="preserve">
    <value>WebMonthCalendar - Property Explorer</value>
  </data>
  <data name="Basic_ChangeMonthToDateClicked" xml:space="preserve">
    <value>Change month to date clicked</value>
  </data>
  <data name="Basic_EnableMonthDropDown" xml:space="preserve">
    <value>Enable month dropdown</value>
  </data>
  <data name="Basic_EnableWeekNumbers" xml:space="preserve">
    <value>Enable week numbers</value>
  </data>
  <data name="Basic_EnableYearDropDown" xml:space="preserve">
    <value>Enable year dropdown</value>
  </data>
  <data name="Basic_FirstDayOfTheWeek" xml:space="preserve">
    <value>First Day of the Week:</value>
  </data>
  <data name="Basic_HideDaysForOtherMonths" xml:space="preserve">
    <value>Hide days for other months</value>
  </data>
  <data name="Basic_SelectionType" xml:space="preserve">
    <value>Selection Type:</value>
  </data>
  <data name="ClientEventsDesc" xml:space="preserve">
    <value>This sample demonstrates some of the client-side events that are built-in to the WebMonthCalendar.  Results will appear in the control panel as you interact with the WebMonthCalendar.</value>
  </data>
  <data name="ClientEventsTitle" xml:space="preserve">
    <value>WebMonthCalendar - Client-side Events</value>
  </data>
  <data name="ClientEvents_KeyDown" xml:space="preserve">
    <value>KeyDown</value>
  </data>
  <data name="ClientEvents_ListAnimationStopped" xml:space="preserve">
    <value>List Animation Stopped</value>
  </data>
  <data name="ClientEvents_ListClosed" xml:space="preserve">
    <value>List Closed</value>
  </data>
  <data name="ClientEvents_ListClosing" xml:space="preserve">
    <value>List Closing</value>
  </data>
  <data name="ClientEvents_ListOpened" xml:space="preserve">
    <value>List Opened</value>
  </data>
  <data name="ClientEvents_ListOpening" xml:space="preserve">
    <value>List Opening</value>
  </data>
  <data name="ClientEvents_SelectionChanged" xml:space="preserve">
    <value>Selection Changed</value>
  </data>
  <data name="ClientEvents_SelectionChanging" xml:space="preserve">
    <value>Selection Changing</value>
  </data>
  <data name="ControlName" xml:space="preserve">
    <value>WebMonthCalendar</value>
  </data>
  <data name="CustomDaysDesc" xml:space="preserve">
    <value>This sample shows how to set a custom day in the WebMonthCalendar. Here we have today selected and special day set with green background and border 1px. You can add any day(s), day of week, month and or year.</value>
  </data>
  <data name="CustomDaysTitle" xml:space="preserve">
    <value>Setting a Custom Day in the WebMonthCalendar</value>
  </data>
  <data name="DataEntryDescription" xml:space="preserve">
    <value>This sample demonstrates how to use a WebMonthCalendar in a data entry scenario.</value>
  </data>
  <data name="DataEntryEndErrMsg" xml:space="preserve">
    <value>Invalid selection.  Your end date can not be prior to your start date.</value>
  </data>
  <data name="DataEntryEndLabel" xml:space="preserve">
    <value>Select End Date</value>
  </data>
  <data name="DataEntryStartErrMsg" xml:space="preserve">
    <value>Invalid selection.  Your start date can not be after your end date.</value>
  </data>
  <data name="DataEntryStartLabel" xml:space="preserve">
    <value>Select Start Date</value>
  </data>
  <data name="DataEntryTitle" xml:space="preserve">
    <value>WebMonthCalendar - Data Entry</value>
  </data>
  <data name="DataEntry_DisplayModeFormat" xml:space="preserve">
    <value>MMM d, yyyy</value>
  </data>
  <data name="LocalizationCultureLabel" xml:space="preserve">
    <value>Select Culture:</value>
  </data>
  <data name="LocalizationDescription" xml:space="preserve">
    <value>This sample demonstrates how to use localization with a WebMonthCalendar</value>
  </data>
  <data name="LocalizationOptionDE_DE" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="LocalizationOptionEN_GB" xml:space="preserve">
    <value>English (GB)</value>
  </data>
  <data name="LocalizationOptionEN_US" xml:space="preserve">
    <value>English (US)</value>
  </data>
  <data name="LocalizationOptionES_MX" xml:space="preserve">
    <value>Spanish (Mexican)</value>
  </data>
  <data name="LocalizationOptionJP_JP" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="LocalizationOptionUK_UA" xml:space="preserve">
    <value>Ukrainian (Ukraine)</value>
  </data>
  <data name="LocalizationTitle" xml:space="preserve">
    <value>WebMonthCalendar - Localization</value>
  </data>
  <data name="MulitiSelectionTitle" xml:space="preserve">
    <value>WebMonthCalendar - Multi-Selection</value>
  </data>
  <data name="MultiSelectionDesc" xml:space="preserve">
    <value>This sample demonstrates the multi-selection feature of the WebMonthCalendar.  You can use the mouse, keyboard or a combination of both to make your selection.</value>
  </data>
  <data name="StyleDescription" xml:space="preserve">
    <value>This sample demonstrates how to use a WebMonthCalendar with the built-in style sets.</value>
  </data>
  <data name="StyleTitle" xml:space="preserve">
    <value>WebMonthCalendar - AppStyling</value>
  </data>
  <data name="VistaDesc" xml:space="preserve">
    <value>This sample demonstrates the ability emulate the Windows Vista style calendar. Click on the header to drill down for different date options.</value>
  </data>
  <data name="VistaTitle" xml:space="preserve">
    <value>WebMonthCalendar - Vista Style</value>
  </data>
</root>